variables:
  - name: 'repositoryName'
    value: 'completion/api'

  - name: 'versionNumber'
    value: '1.000.0.'

  - name: NUGET.PLUGIN.HANDSHAKE.TIMEOUT.IN.SECONDS
    value: 40
  
  - name: NUGET.PLUGIN.REQUEST.TIMEOUT.IN.SECONDS
    value: 40

  - name: 'System.Debug'
    value: 'true'

  - name: 'Agent.Diagnostic'
    value: 'true'

    # Azure Kubernetes Service AAD Server
  - name: radixResource
    value: '6dae42f8-4368-4678-94ff-3960e28e3630'

  - name: radixApplication
    value: 'procosys-completion-api'

    # Host of radix api, including version 
  - name: radixUrl
    value: 'https://api.radix.equinor.com/api/v1'

  - name: 'globalPrefix'
    value: 'pcs'

  - name: 'dockerRegistryServiceConnection'
    value: 'procosys - acr'

  - name: 'nonProdServiceConnection'
    value: 'procosys - non-prod'

  - name: 'prodServiceConnection'
    value: 'procosys - prod'

  - name: 'commonKvName'
    value: '$(globalPrefix)-cert-kv'

  - name: 'commonRgName'
    value: '$(globalPrefix)-common-rg'

  # - name: 'ServiceConnectionSpObjectId'
  #   value: '957e43cf-f08c-4154-aa55-c8fc3aa57930'

  # - name: 'prodServiceConnectionSpObjectId'
  #   value: '85d5d8ff-ad65-4d53-a794-7a9974129518'
    
  # - name: 'containerRegistryName'
  #   value: 'procosys'

  - name: 'fullAppName'
    value: 'completion'
  
  - name: 'shortAppName'
    value: 'completion'

  - name: 'sqlAdminUserName'
    value: 'sqladminlogin'

    # Key in $(commonKvName) to get password for $(sqlAdminUserName)
  - name: 'sqlAdminPasswordKvKey'
    value: 'pcs5-sqladminlogin-$(envName)'

  - name: 'sqlServerName'
    value: 'sql-pcs5-completion-$(envName)'

  - name: 'databaseName'
    value: 'sqldb-pcs5-completion-$(envName)'

  - name: 'kvName'
    value: 'kv-pcs5-completion-$(envName)'

  - name: 'appInsightsName'
    value: 'appi-pcs5-completion-$(envName)'

  # - name: 'appConfigName'
  #   value: '$(globalPrefix)-$(shortAppName)-$(envName)-config'

  # - name: 'envRgName'
  #   value: '$(globalPrefix)-$(fullAppName)-$(envName)-rg'

  # - name: 'apiWebAppName'
  #   value: '$(globalPrefix)-$(shortAppName)-$(envName)-api'

  # equinor-procosys-completion Client ID  TODO: Har benyttet equinor-procosys-preservation
  # - name: 'kvClientIdName'
  #   value: 'cb7afa3f-d2ff-401b-83b6-f02cce85ce30'

  # - name: 'kvClientSecretName'
  #   value: 'equinor-procosys-$(shortAppName)-service-principal'

  # - name: 'kvTenantIdSecret'
  #   value: 'TenantId'

  # - name: 'kvConnStringsSecret'
  #   value: 'ConnectionStrings-AppConfig'

  # - name: 'vnetRg'
  #   value: 'pcs-common-rg'

  # - name: 'vnetName'
  #   value: 'procosys-infra-vnet'

  # - name: 'nonProdAKSsubnet'
  #   value: 'aks-test-snet'

  # - name: 'prodAKSsubnet'
  #   value: 'aks-prod-snet'

  # - name: 'aksRgName'
  #   value: 'pcs-hosting-rg'

  # - name: 'aksTestName'
  #   value: 'pcs-aks-test'

  # - name: 'aksProdName'
  #   value: 'pcs-aks-prod'

  # # Dev variables

  # # Test variables

  # # Prod variables