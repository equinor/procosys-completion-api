name: "üõ†Ô∏è Migration Bundle"

on:
  workflow_call:
    inputs:
      workingDirectory:
        description: "Path for the working directory of the project"
        required: true
        type: string
      bundleDirectory:
        description: "Path for the bundle directory"
        required: true
        type: string
      contextName:
        description: "Context name for the project/component"
        required: true
        type: string
      environment:
        description: 'Environment to deploy to'
        required: true
        type: string
    secrets:
      AZURE_CLIENT_ID:
        required: true
      AZURE_TENANT_ID:
        required: true
      AZURE_SUBSCRIPTION_ID:
        required: true
      DB_CONNECTION_STRING:
        required: true

jobs:
  migrate-dev:
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    steps:
      - uses: actions/checkout@v4
      - name: Azure CLI Login
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      - name: Azure CLI script
        uses: azure/cli@v2
        with:
          azcliversion: latest
          inlineScript: |
            az account show
            # You can write your Azure CLI inline scripts here.
      - name: Setup dotnet 8
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'
      - name: Install dotnet ef
        run: dotnet tool install -g dotnet-ef --prerelease
      - name: create migrations bundle
        id: bundle
        working-directory: ${{ inputs.workingDirectory }}
        run: Global__UseAzureAppConfig="false" dotnet ef migrations bundle --self-contained --runtime linux-x64 -s ${{ inputs.bundleDirectory }} --context ${{ inputs.contextName }} -o bundle.exe --verbose
      - name: Copy appsettings.json
        working-directory: ${{ inputs.workingDirectory }}
        run: cp ${{ inputs.bundleDirectory }}/appsettings.json .
      - name: Run bundle
        working-directory: ${{ inputs.workingDirectory }}
        run: ./bundle.exe --connection ${{ secrets.DB_CONNECTION_STRING }}